@import './variables.less';

.DarkMode {
	a {
		text-decoration: none;

		&:link,
		&:visited {
			@color-link: saturate(lighten(@color-primary, 27%), 16%);
			color: @color-link;

			&:hover {
				color: saturate(lighten(@color-link, 27%), 16%);
				text-decoration: underline;
			}
		}
	}
}

.NavItem_text(@level) {
	@numLevels: 3;
	@index: min((max(@level, 0)), @numLevels - 1) + 1;

	@paddings: @size-l, @size, @size-s;
	@font-sizes: @size-l, @size, @size-s;

	padding-top: extract(@paddings, @index) * 0.5;
	padding-bottom: $padding-top;

	font-size: extract(@font-sizes, @index);
}

.NavItem_text___compact() {
	@padding: .NavItem_text(2) [padding-top];

	padding-top: @padding;
	padding-bottom: @padding;
}

.Content() {
	width: 100%;
	max-width: @content-width;

	> *:last-child {
		margin-bottom: 0rem;
	}

	//----------------------------------
	// Links
	//----------------------------------

	a {
		font-weight: bold;
	}

	//----------------------------------
	// Code
	//----------------------------------

	pre {
		white-space: pre-wrap;
	}
}

.button() {
	background-color: @color-primary;
	background-clip: border-box;
	color: @color-white;
	text-decoration: none;
	font-family: @font-techy;

	min-width: 16rem * 9;

	text-decoration: inherit;
	&,
	&:link,
	&:visited {
		color: @color-white;
	}

	line-height: 1;
	border: @border-width solid #fff1;
	border-radius: @gap*0.5;
	padding: @gap*0.5;
	display: flex;
	align-items: center;
	justify-content: center;

	transition: background-color @duration;
	transition: border-color @duration-l;

	box-shadow: @shadow;

	&:hover {
		background-color: @color-primary-light;
		border-color: @color-highlight;
	}

	&:active {
		transform: translateY(@click-offset);
	}

	&:focus-visible {
		outline-offset: 4px;
	}
}
