import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.yVxbj29m.js";
const __pageData = JSON.parse('{"title":"Common CSS selectors","description":"","frontmatter":{"title":"Common CSS selectors"},"headers":[],"relativePath":"students/html+css/selectors.md","filePath":"students/html+css/selectors.md"}');
const _sfc_main = { name: "students/html+css/selectors.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h2 id="most-common-selectors" tabindex="-1">Most common selectors <a class="header-anchor" href="#most-common-selectors" aria-label="Permalink to &quot;Most common selectors&quot;">​</a></h2><table><thead><tr><th style="${ssrRenderStyle({ "text-align": "left" })}">Selector</th><th style="${ssrRenderStyle({ "text-align": "left" })}">Description</th><th style="${ssrRenderStyle({ "text-align": "left" })}">Comment</th></tr></thead><tbody><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">*</td><td style="${ssrRenderStyle({ "text-align": "left" })}">Any element (universal selector).</td><td style="${ssrRenderStyle({ "text-align": "left" })}"></td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">#elementID</td><td style="${ssrRenderStyle({ "text-align": "left" })}">Any element with <code>id=&quot;elementID&quot;</code>.</td><td style="${ssrRenderStyle({ "text-align": "left" })}">A page should only have one element with a given <code>id</code>.</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">.enementClass</td><td style="${ssrRenderStyle({ "text-align": "left" })}">Any element with <code>class=&quot;elementClass&quot;</code>.</td><td style="${ssrRenderStyle({ "text-align": "left" })}">An element can have multiple classes separated by space.</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">div</td><td style="${ssrRenderStyle({ "text-align": "left" })}">Any <code>&lt;div&gt;</code>.</td><td style="${ssrRenderStyle({ "text-align": "left" })}"></td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">div#divID.divClass</td><td style="${ssrRenderStyle({ "text-align": "left" })}">Any <code>&lt;div&gt;</code> with <code>id=&quot;id&quot;</code> and <code>class=&quot;divClass&quot;</code>.</td><td style="${ssrRenderStyle({ "text-align": "left" })}"></td></tr></tbody></table><h2 id="combinators" tabindex="-1">Combinators <a class="header-anchor" href="#combinators" aria-label="Permalink to &quot;Combinators&quot;">​</a></h2><table><thead><tr><th style="${ssrRenderStyle({ "text-align": "left" })}">Selector</th><th style="${ssrRenderStyle({ "text-align": "left" })}">Description</th></tr></thead><tbody><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">div, p</td><td style="${ssrRenderStyle({ "text-align": "left" })}">any <code>&lt;div&gt;</code> and any <code>&lt;p&gt;</code></td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">div p</td><td style="${ssrRenderStyle({ "text-align": "left" })}">any <code>&lt;p&gt;</code> inside a <code>&lt;div&gt;</code><br><em>(does not have to be a direct child)</em></td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">div &gt; p</td><td style="${ssrRenderStyle({ "text-align": "left" })}">any <code>&lt;p&gt;</code> which is a direct child of a <code>&lt;div&gt;</code></td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">div + p</td><td style="${ssrRenderStyle({ "text-align": "left" })}">any <code>&lt;p&gt;</code> immediately after a <code>&lt;div&gt;</code></td></tr></tbody></table><h2 id="links" tabindex="-1">Links <a class="header-anchor" href="#links" aria-label="Permalink to &quot;Links&quot;">​</a></h2><table><thead><tr><th style="${ssrRenderStyle({ "text-align": "left" })}">Selector</th><th style="${ssrRenderStyle({ "text-align": "left" })}">Description</th></tr></thead><tbody><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">a:link</td><td style="${ssrRenderStyle({ "text-align": "left" })}">unvisited link</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">a:visited</td><td style="${ssrRenderStyle({ "text-align": "left" })}">visited link</td></tr></tbody></table><h2 id="hover-and-click" tabindex="-1">Hover and click <a class="header-anchor" href="#hover-and-click" aria-label="Permalink to &quot;Hover and click&quot;">​</a></h2><table><thead><tr><th style="${ssrRenderStyle({ "text-align": "left" })}">Selector</th><th style="${ssrRenderStyle({ "text-align": "left" })}">Description</th></tr></thead><tbody><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">.button:active</td><td style="${ssrRenderStyle({ "text-align": "left" })}">any element with <code>class=&quot;button&quot;</code> <br> which is currently being clicked</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">.button:hover</td><td style="${ssrRenderStyle({ "text-align": "left" })}">any element with <code>class=&quot;button&quot;</code> <br> which has the cursor hovering above it</td></tr></tbody></table><h2 id="further-reading" tabindex="-1">Further reading <a class="header-anchor" href="#further-reading" aria-label="Permalink to &quot;Further reading&quot;">​</a></h2><dl><dt>MDN</dt><dd><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors" target="_blank" rel="noreferrer">CSS selectors</a></dd><dt>w3school</dt><dd><a href="https://www.w3schools.com/cssref/css_selectors.asp" target="_blank" rel="noreferrer">CSS Selector Reference</a></dd></dl></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("students/html+css/selectors.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const selectors = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  selectors as default
};
